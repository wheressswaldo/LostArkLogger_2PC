/*
 * This file has been Auto Generated, Please do not edit.
 * If you need changes, follow the instructions written in the readme.md
 *
 * Generated by Herysia.
 */

using System;
using System.Collections.Generic;
using LostArkLogger.Types;

namespace LostArkLogger
{
    public class StatusEffectData
    {
        public bool valid = false;
        internal StatusEffectData()
        {
            //Made for conditional structures
        }

        internal StatusEffectData(BitReader reader)
        {
            valid = true;
            SkillLevel = reader.ReadByte();
            InstanceId = reader.ReadUInt64();
            Unk2 = reader.ReadInt32();
            Unk3 = reader.ReadByte();
            hasValue = reader.ReadBool();
            if(hasValue)
            {
                Value = reader.ReadBytes(16);
            }
            Unk5 = reader.ReadByte();
            if(Unk5 == 1)
            {
                Unk5_0 = reader.ReadInt64();
            }
            SourceId = reader.ReadUInt64();
            Unk7 = new Struct_420(reader);
            StatusEffectId = reader.ReadUInt32();
            EffectInstanceId = reader.ReadUInt32();
            Unk10 = new LostArkDateTime(reader);
        }

        public byte SkillLevel { get; }
        public ulong InstanceId { get; }
        public int Unk2 { get; }
        public byte Unk3 { get; }
        public bool hasValue { get; }
        public byte[] Value { get; }
        public byte Unk5 { get; }
        public long Unk5_0 { get; }
        public ulong SourceId { get; }
        public Struct_420 Unk7 { get; } = new Struct_420();
        public uint StatusEffectId { get; }
        public uint EffectInstanceId { get; }
        public LostArkDateTime Unk10 { get; } = new LostArkDateTime();
    }
}