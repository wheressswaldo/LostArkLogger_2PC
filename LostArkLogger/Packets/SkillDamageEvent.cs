/*
 * This file has been Auto Generated, Please do not edit.
 * If you need changes, follow the instructions written in the readme.md
 *
 * Generated by Herysia.
 */

using System;
using System.Collections.Generic;
using LostArkLogger.Types;

namespace LostArkLogger
{
    public class SkillDamageEvent
    {
        public bool valid = false;
        internal SkillDamageEvent()
        {
            //Made for conditional structures
        }

        internal SkillDamageEvent(BitReader reader)
        {
            valid = true;
            Modifier = reader.ReadByte();
            HasDamageAttr = reader.ReadByte();
            if(HasDamageAttr == 1)
            {
                DamageAttr = reader.ReadByte();
            }
            Unk3_m = reader.ReadInt16();
            CurHp = new ReadNBytesInt64(reader);
            MaxHp = new ReadNBytesInt64(reader);
            TargetId = reader.ReadUInt64();
            Damage = new ReadNBytesInt64(reader);
            DamageType = reader.ReadByte();
        }

        public byte Modifier { get; }
        public byte HasDamageAttr { get; }
        public byte DamageAttr { get; }
        public short Unk3_m { get; }
        public ReadNBytesInt64 CurHp { get; } = new ReadNBytesInt64();
        public ReadNBytesInt64 MaxHp { get; } = new ReadNBytesInt64();
        public ulong TargetId { get; }
        public ReadNBytesInt64 Damage { get; } = new ReadNBytesInt64();
        public byte DamageType { get; }
    }
}